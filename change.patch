diff --git a/README.md b/README.md
index 05a80a8..d73d0e4 100644
--- a/README.md
+++ b/README.md
@@ -20,11 +20,11 @@ By default, if no tags are provided, the tag "global" is used for your annotatio
 - environment
   - grafana_url
 - secrets
-  - grafana_api_token
-  - grafana_username
-  - grafana_password
+  - grafana-api-token
+  - grafana-username
+  - grafana-password
 
-This function prioritizes **grafana_api_token** first, then falls back to basic authentication provided by grafana_username and grafana_password.
+This function prioritizes **grafana-api-token** first, then falls back to basic authentication provided by grafana-username and grafana-password.
 
 ### Grafana Configuration
 1) Add new API key (User icon -> API Keys) w/ Editor role
diff --git a/grafana-annotate/handler.go b/grafana-annotate/handler.go
index 65a61bf..e79bf4b 100644
--- a/grafana-annotate/handler.go
+++ b/grafana-annotate/handler.go
@@ -53,15 +53,15 @@ func Handle(req []byte) string {
 
 	request, err := http.NewRequest("POST", url, bytes.NewBuffer(payloadJson))
 
-	token, tokenErr := getSecret("grafana_api_token")
+	token, tokenErr := getSecret("grafana-api-token")
 
 	var contextMessage string
 
-	// try to use grafana_api_token secret first, then basic auth
+	// try to use grafana-api-token secret first, then basic auth
 	if tokenErr != nil {
 		contextMessage = fmt.Sprintf("Grafana credential error: API token not found. Using basic auth: %v", tokenErr)
-		username, userErr := getSecret("grafana_username")
-		password, pwdErr := getSecret("grafana_password")
+		username, userErr := getSecret("grafana-username")
+		password, pwdErr := getSecret("grafana-password")
 
 		if userErr != nil {
 			contextMessage += fmt.Sprintf("Grafana credential error: username not found. Using default... %v", userErr)
